{"version":3,"file":"static/js/646.d412b8b0.chunk.js","mappings":"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","sources":["components/projects/ProjectSingle.jsx","components/projects/ProjectsFilter.jsx","components/projects/ProjectsGrid.jsx","data/projects.js","context/ProjectsContext.jsx"],"sourcesContent":["import { motion } from 'framer-motion'\nimport 'react-medium-image-zoom/dist/styles.css'\n\nconst ProjectSingle = ({\n  title,\n  category,\n  image,\n  description,\n  skills,\n  link,\n  youtubeLink,\n  websiteLink,\n}) => {\n  console.log(youtubeLink)\n  // const [zoomed, setZoomed] = useState(false)\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, delay: 1 }}\n      transition={{\n        ease: 'easeInOut',\n        duration: 0.7,\n        delay: 0.15,\n      }}\n    >\n      {/* <Link to=\"/projects/single-project\" aria-label=\"Single Project\"> */}\n      <div className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\n        <div className=\"flex flex-col\">\n          {youtubeLink ? (\n            <iframe\n              className=\"rounded-t-xl w-full\"\n              title={title}\n              height=\"650\"\n              allowfullscreen=\"true\"\n              frameborder=\"0\"\n              src={`https://youtube.com/embed/${youtubeLink}?loop=1&playlist=${youtubeLink}&controls=0`}\n            ></iframe>\n          ) : (\n            <a href={image}>\n              <img\n                src={image}\n                className=\"rounded-t-xl border-none\"\n                // zoomed={zoomed}\n                alt=\"Single Project\"\n                // onClick={() => setZoomed(true)}\n                // onRequestClose={() => setZoomed(false)}\n              ></img>\n            </a>\n          )}\n        </div>\n        <div className=\"text-center px-4 py-6\">\n          <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\n            {title}\n          </p>\n          {/* <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\n            {category}\n          </span> */}\n          {link ? (\n            <a href={link} target=\"_blank\" rel=\"noreferrer\">\n              <p className=\"text-sm text-ternary-dark dark:text-ternary-light\">\n                Source Code\n              </p>\n            </a>\n          ) : websiteLink ? (\n            <a href={websiteLink} target=\"_blank\" rel=\"noreferrer\">\n              <p className=\"text-sm text-ternary-dark dark:text-ternary-light\">\n                Website Link\n              </p>\n            </a>\n          ) : null}\n        </div>\n        {description?.map((paragraph) => (\n          <>\n            <p className=\"text-primary-dark dark:text-primary-light\">\n              {paragraph}\n            </p>\n            <br />\n          </>\n        ))}\n        <p className=\"text-primary-dark dark:text-primary-light font-bold\">\n          Tools:\n        </p>\n        <p className=\"text-primary-dark dark:text-primary-light\">{skills}</p>\n      </div>\n      {/* </Link> */}\n    </motion.div>\n  )\n}\n\nexport default ProjectSingle\n","const selectOptions = [\n\t'Web Application',\n\t'Mobile Application',\n\t'UI/UX Design',\n\t'Branding',\n];\n\nconst ProjectsFilter = ({ setSelectProject }) => {\n\treturn (\n\t\t<select\n\t\t\tonChange={(e) => {\n\t\t\t\tsetSelectProject(e.target.value);\n\t\t\t}}\n\t\t\tclassName=\"font-general-medium \n                px-4\n                sm:px-6\n                py-2\n                border\n                dark:border-secondary-dark\n                rounded-lg\n                text-sm\n                sm:text-md\n                dark:font-medium\n                bg-secondary-light\n                dark:bg-ternary-dark\n                text-primary-dark\n                dark:text-ternary-light\n            \"\n\t\t>\n\t\t\t<option value={setSelectProject} className=\"text-sm sm:text-md\">\n\t\t\t\tAll Projects\n\t\t\t</option>\n\n\t\t\t{selectOptions.map((option) => (\n\t\t\t\t<option className=\"text-normal sm:text-md\" key={option}>\n\t\t\t\t\t{option}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t);\n};\n\nexport default ProjectsFilter;\n","import { useContext } from 'react'\nimport { FiSearch } from 'react-icons/fi'\nimport ProjectSingle from './ProjectSingle'\nimport { ProjectsContext } from '../../context/ProjectsContext'\nimport ProjectsFilter from './ProjectsFilter'\n\nconst ProjectsGrid = () => {\n  const {\n    projects,\n    searchProject,\n    // setSearchProject,\n    searchProjectsByTitle,\n    selectProject,\n    // setSelectProject,\n    selectProjectsByCategory,\n  } = useContext(ProjectsContext)\n\n  return (\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\n      <div className=\"text-center\">\n        <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\n          Projects portfolio\n        </p>\n      </div>\n\n      <div className=\"mt-10 sm:mt-16\">\n        {/* <h3\n          className=\"font-general-regular \n                        text-center text-secondary-dark\n                        dark:text-ternary-light\n                        text-md\n                        sm:text-xl\n                        mb-3\n                        \"\n        >\n          Search projects by title or filter by category\n        </h3> */}\n        <div\n          className=\"\n                        flex\n                        justify-between\n                        border-b border-primary-light\n                        dark:border-secondary-dark\n                        pb-3\n                        gap-3\n                        \"\n        >\n          <div className=\"flex justify-between gap-2\">\n            {/* <span\n              className=\"\n                                hidden\n                                sm:block\n                                bg-primary-light\n                                dark:bg-ternary-dark\n                                p-2.5\n                                shadow-sm\n                                rounded-xl\n                                cursor-pointer\n                                \"\n            >\n              <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\n            </span> */}\n            {/* <input\n              onChange={(e) => {\n                setSearchProject(e.target.value)\n              }}\n              className=\"font-general-medium \n                                pl-3\n                                pr-1\n                                sm:px-4\n                                py-2\n                                border \n                            border-gray-200\n                                dark:border-secondary-dark\n                                rounded-lg\n                                text-sm\n                                sm:text-md\n                                bg-secondary-light\n                                dark:bg-ternary-dark\n                                text-primary-dark\n                                dark:text-ternary-light\n                                \"\n              id=\"name\"\n              name=\"name\"\n              type=\"search\"\n              required=\"\"\n              placeholder=\"Search Projects\"\n              aria-label=\"Name\"\n            /> */}\n          </div>\n\n          {/* <ProjectsFilter setSelectProject={setSelectProject} /> */}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\n        {selectProject\n          ? selectProjectsByCategory.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n              />\n            ))\n          : searchProject\n          ? searchProjectsByTitle.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                projectId={project.id}\n              />\n            ))\n          : projects.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                key={project.id}\n                description={project.description}\n                skills={project.skills}\n                link={project.link}\n                youtubeLink={project.youtubeLink}\n                websiteLink={project.websiteLink}\n              />\n            ))}\n      </div>\n    </section>\n  )\n}\n\nexport default ProjectsGrid\n","// Import images\n// import WebImage1 from '../images/project-images/web-project-1.jpg'\n// import WebImage2 from '../images/web-project-2.jpg'\n// import MobileImage1 from '../images/mobile-project-1.jpg'\n// import MobileImage2 from '../images/mobile-project-2.jpg'\n// import UIImage1 from '../images/ui-project-1.jpg'\n// import UIImage2 from '../images/ui-project-2.jpg'\nimport cinequeueImg from '../images/project-images/cinequeue.png'\nimport gpImg from '../images/project-images/gp-appointment.png'\nimport hailImg from '../images/project-images/hail.png'\nimport postgramImg from '../images/project-images/postgram-max.png'\nimport rcmndrImg from '../images/project-images/rcmndr.png'\nimport todosImg from '../images/project-images/todos.png'\nimport salesLedgerImg from '../images/project-images/sales-ledger-small.png'\nimport charmWebsiteImg from '../images/project-images/charm-website-screenshot.jpg'\nimport templateBarberImg from '../images/project-images/templatebarber-mobile.png'\nimport charmNextJSImg from '../images/project-images/charm-nextjs.png'\nimport sanskritiImg from '../images/project-images/sanskriti-wordpress.png'\nimport chatAppImg from '../images/project-images/chatapp-image.png'\nimport cinequeueNextjsImg from '../images/project-images/cinequeue-nextjs-image.jpg'\n\nexport const projectsData = [\n  {\n    id: 13,\n    title: 'CineQueue NextJS',\n    category: 'UI/UX Design',\n    description: [\n      'Cinequeue NextJS is a recreation of a previous project that was made as a group using React and Tailwind with a SQL database utilising Knex. I wanted to recreate the project so that I can showcase my current skills and be able to host the project with a working database and authentication with firebase so that anyone can sign up and start using it. The original project was hosted for a short amount of time and also the hosting of the database was causing some issues so I wanted to change providers.',\n      'I’m still currently working onI’m still currently working on this project and it’s in the basics stage; it provides you with runtime per movie or tv show. Clicking on view more on an item sends you to the details page with a trailer/video related to the content, actors list and the ability to add the movie to your watchlist and seen list (page for this is yet to be implemented). The watchlist page also provides you with a total runtime in the watchlist which can help users see how much time they need to get through all their content. I’ve just started working on implementing the runtimes for TV shows so all the functionality for adding in any tv shows into the watchlist is currently not working. Runtime for items in the hero slider are visible as every time the slider changes the api is called to get the details. Search functionality has also been implemented and improved on utilising an infinity scroll component rather than page based. this project and it’s in the basics stage; it provides you with runtime per movie or tv show.',\n\n      'Clicking on view more on an item sends you to the details page with a trailer/video related to the content, actors list and the ability to add the movie to your watchlist and seen list (page for this is yet to be implemented). The watchlist page also provides you with a total runtime in the watchlist which can help users see how much time they need to get through all their content. I’ve just started working on implementing the runtimes for TV shows so all the functionality for adding in any tv shows into the watchlist is currently not working.',\n      'The aim of the web app is to provide users with a site that they can track their total runtime watched for movies/shows and how long a movie/show is whilst also providing discovery of new content using different parameters with a smooth experience with the UI/UX.',\n    ],\n    skills: `*React\n    *NextJS\n    *Tailwind CSS\n    *JavaScript\n    *HTML\n    *Firebase/Firestore\n    `,\n    img: cinequeueNextjsImg,\n    websiteLink: 'https://cinequeue-nextjs.netlify.app/',\n  },\n  {\n    id: 12,\n    title: 'ChatApp',\n    category: 'UI/UX Design',\n    description: [\n      'Following the website I had created using Wordpress I wanted to go back to coding projects which is where I found myself starting off with researching and understanding how to use Firebase and Firestore to create a realtime database. I didn’t want to make a big project just yet but wanted to figure out the ins and outs of Firebase/Firestore.',\n\n      'I used the knowledge I had learned from my research to then create a chat app which utilizes Firebase for authorization using Google pop up sign in services. And the backend with Firestore for the database.',\n\n      'This is a simple app and it works simply as it should. It is more of a chat room as opposed to a one-on-one chat. Anyone can sign in with their Google account and write messages in the chat.',\n\n      'The app is currently live and hosted on Netlify, you can see the example conversation being had in the chat and are able to enter your own messages if you wanted.',\n    ],\n    skills: `*React\n    *NextJS\n    *Tailwind CSS\n    *JavaScript\n    *HTML\n    *Firebase/Firestore\n    `,\n    img: chatAppImg,\n    websiteLink: 'https://chatapp2024.netlify.app/',\n  },\n  {\n    id: 11,\n    title: 'Sanskriti School Of Passion',\n    category: 'UI/UX Design',\n    description: [\n      'Sanskriti School Of Passion is a site which I had made for a client using WordPress. This was my first time using WordPress so it took me getting some used to but in the end I believe I was able to make a website that was modern, user friendly and most importantly one that the client and I were both happy with.',\n\n      'The site consists of 15 pages so it is the largest site I have made to date. Because of the size of the website I was able to learn a whole lot from my experiences. A lot of troubleshooting and figuring out the ins and outs of WordPress. It was a good experience to say the least.',\n\n      'This was also the first time I was dealing with CMS(content management system). The client required parts of their website to be manageable by them. When I first started the project I was looking at creating something React based with NextJS and using WordPress as a headless CMS however I opted to make the website in full WordPress so I could get some more learning as there are a plethora of websites that are based off of WordPress.',\n\n      'I went into this project thinking there would be no aspect from my previous knowledgebase that would come in handy however, as it turns out knowing HTML and CSS made the project go a lot smoother when it came to styling and any finer adjustments that were required.',\n    ],\n    skills: `*WordPress\n    *HTML\n    *CSS\n    `,\n    img: sanskritiImg,\n    websiteLink: 'https://sanskriti.ac.nz',\n  },\n  {\n    id: 10,\n    title: 'Charm Beauty Parlour NextJS',\n    category: 'UI/UX Design',\n    description: [\n      `I decided to experiment and try out NextJS. Utilising it’s routing capabilities and optimizations in SEO(Search engine optimization) I decided to take the plunge and also recreate the previous Charm Beauty Parlour website and also implement a new design for the hero.`,\n      'The plan was to recreate the hero and adding services, making it more simple and more optimized as the last one was a slider and was making the website noticeably lag on Firefox on my mobile. I had a look into this and found that it’s better to have a static and minimal hero. They perform better and visibly look more appealing. Same goes with services on the page. Adding in 3 points just below the hero so customers can immediately see what to expect from the shop. I also spent a big proportion of time looking and researching about SEO to get this website performing as well as it could.',\n      'This project was also a means for me to then go about buying, registering and then hosting a website with the domain name. I have learnt a lot from this project and I can see this information sticking with me to help me for future projects.',\n    ],\n    skills: `*React\n    *NextJS\n    *TypeScript\n    *JavaScript\n    *HTML\n    *Tailwind CSS\n    *Material Tailwind\n    `,\n    img: charmNextJSImg,\n    websiteLink: 'https://charmbeautyparlour.co.nz',\n  },\n  {\n    id: 9,\n    title: 'Template Barbers',\n    category: 'UI/UX Design',\n    description: [\n      `Template is a project I created based on wanting to create a website for barbers which could use this as a template for their own businesses. I wanted to use this to showcase where my skills are currently too. I started off designing the website in Figma and then when I was happy with how it looked, I started working on different components of the website and putting them together.`,\n      'Template is fully responsive so please do check the link and see how it plays on different screen sizes. I put in a lot of effort to make the team members flow nicely on different screen sizes.',\n      'This website surprisingly didn’t take me too long to create. This is a product that I am quite happy with. It shows my skills as a developer are indeed getting stronger. I’m sticking to using React with Tailwind CSS for the most part and even making components on my own, e.g the slideshow on mobile screens was made completely from scratch. However, I’m not currently happy with how the slideshow is, I would like for there to be a smooth animation in between the change of team members. Having that would make the website look a bit smoother.',\n    ],\n    skills: `*React\n    *TypeScript\n    *JavaScript\n    *HTML\n    *Tailwind CSS\n    *Material Tailwind\n    *Framer-Motion\n    *EmailJS\n    `,\n    img: templateBarberImg,\n    websiteLink: 'https://templatebarber.netlify.app/',\n  },\n  {\n    id: 8,\n    title: 'Charm Beauty Parlour',\n    category: 'UI/UX Design',\n    description: [\n      `Charm Beauty Parlour is a website that I created for my mums business so that she could showcase her business, her skills and her legacy.`,\n      `This website is built using React and Tailwind CSS. This is something I surprised my mum with, she didn’t know I had been working on creating a way for her to display her business and a bit about how the business has come to fruition. I’ve currently hosted the project using Netlify and I will be working on getting a custom domain however for the meantime I can at least showcase to you all the fruits of my labour.`,\n      `It is a fairly simple website in the grand scheme of things – it has the main page, price list, and about page but each component of the website has been made with the utmost care.`,\n      `The website is fully responsive – I built this with mobile first in mind as most of the target audience is likely using their smartphones to access the site.`,\n      'Working on this project has helped me learn more about Tailwind CSS and I hope to continue to improve my knowledge in this field too. As with most people, Tailwind CSS is something that people may start off on a rocky foot with, it might seem a bit cumbersome to use but overtime it grows on you. I currently very much enjoy using Tailwind CSS.',\n      'I’d like to continue developing websites to improve my skills and have more projects under my belt to showcase. Being able to showcase these projects here and in my portfolio helps me see the progress I have been making throughout my time of being a developer. I can see myself and how far I have come and I am looking forward to where I can go from here.',\n    ],\n    skills: `*React\n    *TypeScript\n    *JavaScript\n    *HTML\n    *Tailwind CSS\n    *Material Tailwind\n    `,\n    img: charmWebsiteImg,\n    websiteLink: 'https://charmbeautyparlour.netlify.app/',\n  },\n  {\n    id: 7,\n    title: 'Sales Ledger',\n    category: 'UI/UX Design',\n    description: [\n      `A solo project that I had envisioned while I was at Dev Academy. This was a project that I wanted to work on after I had graduated so I continued to have a project to work on. I am currently still working on this project however now that it is in a state that I would consider past MVP (minimal viable product) I have decided to show the public.`,\n      `I worked on this project during my free time and had found myself changing the design and functionality as time went on to further develop my skills and also as I went on I realised the app needed more functionality to be useful.`,\n      `I like to keep track of my buying and selling and seeing how much profit I am currently on. This app helps me keep track of my inventory, the value of the inventory and where I had done the sales and dates. Specifically with TradeMe, it does not store data for very long so any user data like sold items or won items etc are not kept track of for more than a few months. It also does not have a way for me to check how much I have made in profit. Rather it only shows per sale. This along with using Facebook as my other primary source of trading I decided to make an app that encompasses what I had been doing with Excel spreadsheet which wasn’t very tidy looking. I wanted to make sure I could have a nice UI and UX so that it would not be cumbersome to use.`,\n      `I am looking into switching from React to React Native so that I can have the Sales Ledger on my mobile as I had already designed the Sales Ledger with mobile first in mind.\n    `,\n    ],\n    skills: `*React\n    *TypeScript\n    *JavaScript\n    *SQL Database(Knex)\n    *Express\n    *Superagent\n    *HTML\n    *Tailwind CSS\n    *Material Tailwind\n    *Toastify\n    `,\n    img: salesLedgerImg,\n    // link: 'https://github.com/samir-lekinwala/CineQueue',\n    youtubeLink: 'PfpudzcNp5M',\n  },\n  {\n    id: 3,\n    title: 'CineQueue',\n    category: 'UI/UX Design',\n    description: [\n      `This App was the final group project that was done during the DevAcademy bootcamp with 4 members in the team over 7 days.`,\n      `This app gave users the ability to add movies and tv shows to their watchlist, completed list, and see the runtime. It gave users options to choose content based on if they wanted to see TV Shows or Movies, the different genres within them and categories like upcoming and top rated. The key feature we had for our app was that you could see the entire runtime of a tv show and be able to change your availability in minutes per day. If you say for example only had 60 minutes to watch a show that was 40 hours long, it will take you 40 days to complete the series. We utilised the data from an API that was free to use and filtered based on data points we needed. Auth0 was also implemented so that each user could add content to their own watchlist and completed list.`,\n      `Recommendations were implemented based on the content clicked on and appeared at the bottom of the screen. There is also a search functionality within the app to search for your desired content.`,\n      `The idea came from combining different ideas together, one for recommendations and another for displaying time to watch a series and the idea of viewing the content. I personally was really wanting to create this app because I have a huge interest in movies and TV shows and wanted to have somewhere I could search and find the runtime of a show. This was a huge motivation for me to do this project. There are plans to continue doing this project and implementing new features such as adding friends and seeing their watchlist/completed lists.`,\n      `I was the product owner, team lead, git lead, designer, and planner for this project. I worked heavily on the front-end and backend for the SQL database creating the overall display of the website and functionality.\n    `,\n    ],\n    skills: `*React\n    *TypeScript\n    *REST API\n    *JavaScript\n    *SQL Database(Knex)\n    *Express\n    *Superagent\n    *HTML\n    *Tailwind CSS\n    *Auth0\n    `,\n    img: cinequeueImg,\n    link: 'https://github.com/samir-lekinwala/CineQueue',\n  },\n  {\n    id: 5,\n    title: 'rcmndr',\n    category: 'Mobile Application',\n    description: [\n      `This was a project done with the entire classroom and the facilitators acting as senior devs to mimic what it would be like in the work force as a developer during an almost week long period. Students either paired up or went solo to add features, fix bugs and create a functional app that lets you recommend songs to your friends. There was also the ability to report songs which then get sent to the moderator team who have their own admin logins to check the reports and deem them offensive or not.`,\n      `Within this collaborative project I worked on adding loading based on data being fetched, PWA functionality, and worked on creating the moderation of reported songs.\n    `,\n      `All the tickets that I worked on was for areas that I had not worked in before, so it was a good learning opportunity. I especially enjoyed the satisfaction of being able to download the app to our mobile phones and being able to display it on there.`,\n    ],\n    skills: `*React\n    *TypeScript\n    *Tailwind CSS\n    *SQL Database(Knex)\n    *Express\n    *Superagent\n    *HTML\n    *HTMX\n    `,\n    img: rcmndrImg,\n    link: 'https://github.com/samir-lekinwala/rcmndr',\n  },\n  {\n    id: 1,\n    title: 'GP-Appointment',\n    category: 'Web Application',\n    img: gpImg,\n    description: [\n      `This App is just as the title suggests, it was a means for patients to make appointments with their GP. This App was made collaboratively with 2 other fellow students in the span of 1 day. You could create a new appointment, adjusting the time and date, if the appointment was already taken for that time and with that GP then the APP would let you know that the timing was unavailable. You could also view your previous/current appointments by inserting your name into the Appointment History to get a view of all past appointments.`,\n\n      `As a group we wanted to utilize the skills we had learnt so far at the bootcamp. This was at a point before we learned about SQL databases so as a substitute we used JSON data. It was a good learning opportunity. We wanted to make an app that could serve some real purpose in the real world. I believe we achieved this to some degree although it is a bit unpolished, the basic functionality is there. We wanted to have a separate admin page which requires some sort of passcode or login so the doctors practice could see who would becoming to be seen on any given day but we did not have enough time to create that function.`,\n      `\n      In this project I worked heavily on the front-end with HandleBars, HTML and CSS, creating the overall design for the app whilst also chipping in the backend with the team to assist where I could. Within this project I got quite a bit of knowledge using Handlebars and CSS..\n    `,\n    ],\n    skills: `*Handlebars\n    *Javascript\n    * HTML\n    * CSS\n    * Express\n    `,\n    link: 'https://github.com/samir-lekinwala/GP-Appointment',\n    // ProjectHeader: {\n    // \ttitle: 'Project Management UI - From Context',\n    // \tpublishDate: 'Jul 26, 2021',\n    // \ttags: 'UI / Frontend',\n    // },\n  },\n  {\n    id: 2,\n    title: 'HAiL',\n    category: 'Mobile Application',\n    description: [\n      `This App was a collaborative project made in the span of 1 day with 2 others to utilise a REST API to create an App that displayed the weather based on location chosen. In this App you could see the initial location which was set to Auckland but on the top right there is a dropdown menu that reveals Locations. The Locations page reveals many different popular cities from across the globe. \n    `,\n      `The weather data comes from an API which can display many different properties and it is up to the user how to interpret the data. In our case we had to determine that x amount level of clouds in the sky would mean that it is considered cloudy. We had to adjust the icons we chose to display under the temperature to adjust based on the conditions of this data.`,\n\n      `The reason we chose to do this project was because we wanted to be able to utilize an API. It was one of our first times using them and as it turns out it worked out well. We wanted to be able to originally be able to give the temperature based on any location, this would use longitude and latitude data based on a person’s current location or being able to search a country which would in the backend look at the longitude and latitude data which in turn would display the cities temperature. To do this it would be required to find a data set of cities and their coordinates. As far as I can tell this is doable and the resources are out there. Unfortunately doing so would have required a lot more time which we did not have.`,\n      `\n    I worked heavily on the front-end design using React, TypeScript, HTML & CSS.\n    `,\n    ],\n    skills: `*React\n    *TypeScript\n    *HTML\n    *CSS\n    *REST API\n    `,\n    img: hailImg,\n    link: 'https://github.com/samir-lekinwala/HAiL',\n  },\n  {\n    id: 4,\n    title: 'Todo List',\n    category: 'UI/UX Design',\n    description: [\n      `This is a solo project done as a challenge part of DevAcademy to make a functioning todo list app. Within this app you can add, edit, delete, and complete a todo, see how many todos are left in your list and clear todos that you have already marked as completed.`,\n      `The aim of the app is to create a full-stack web application using the skills we had learnt over the course of the bootcamp and deploying apps to the web.`,\n      `This was my first time using Dokku so it was a good learning opportunity for when it comes to deploying apps. It was a bit of a struggle due to some syntax issues but it felt good to have to have it successfully deploy.`,\n      `The app functionality is basic as it is only a todo list but to achieve this many different technologies had to be utilised to create this full-stack app which was deployed for a short time on the web using dokku.\n    `,\n    ],\n    skills: `*React\n    *TypeScript\n    *JavaScript\n    *SQL Database(Knex)\n    *Express\n    *Superagent\n    *HTML\n    *Dokku\n    `,\n    img: todosImg,\n    link: 'https://github.com/samir-lekinwala/todos-full-stack',\n  },\n\n  {\n    id: 6,\n    title: 'Postgram-Max',\n    category: 'Web Application',\n    description: [\n      `This was originally a 4 man team project but two of the team members ended up getting sick so the team was reduced to 2 after the planning stage. The aim of this project was to make a gallery app where you could upload a photo and attach a caption to the photo. It had taken some inspiration from Instagram however functionality wise our app due to the reduced number of team members and lack of API knowledge at the time we had to compromise to just using local data instead of being able to upload data using a back-end server and api. This was before we had managed to learn about connecting the front-end and back-end with api so our app ended up having to be a very basic gallery app. However this project was still a good learning opportunity as we had reduced members both me and the one other team member had to wear many hats during this project.`,\n      `If we were to redo this project, I would focus more on the front end and making it look better, more responsive using Tailwind and having more functionality such as commenting but last but not least, being able to have a proper backend where users could upload directly to the server instead of having to use local images.`,\n    ],\n    skills: `*React\n    *TypeScript\n    *CSS\n    *HTML\n    `,\n    img: postgramImg,\n    link: 'https://github.com/samir-lekinwala/postgram-max',\n  },\n]\n","import { useState, createContext } from 'react'\nimport { projectsData } from '../data/projects'\n\n// Create projects context\nexport const ProjectsContext = createContext()\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n  const [projects, setProjects] = useState(projectsData)\n  const [searchProject, setSearchProject] = useState('')\n  const [selectProject, setSelectProject] = useState('')\n\n  // Search projects by project title\n  const searchProjectsByTitle = projects.filter((item) => {\n    const result = item.title\n      .toLowerCase()\n      .includes(searchProject.toLowerCase())\n      ? item\n      : searchProject === ''\n      ? item\n      : ''\n    return result\n  })\n\n  // Select projects by project category\n  const selectProjectsByCategory = projects.filter((item) => {\n    let category =\n      item.category.charAt(0).toUpperCase() + item.category.slice(1)\n    return category.includes(selectProject)\n  })\n\n  return (\n    <div id=\"projects\">\n      <ProjectsContext.Provider\n        value={{\n          projects,\n          setProjects,\n          searchProject,\n          setSearchProject,\n          searchProjectsByTitle,\n          selectProject,\n          setSelectProject,\n          selectProjectsByCategory,\n        }}\n      >\n        {props.children}\n      </ProjectsContext.Provider>\n    </div>\n  )\n}\n"],"names":["_ref","title","category","image","description","skills","link","youtubeLink","websiteLink","console","log","_jsx","motion","div","initial","opacity","animate","delay","transition","ease","duration","children","_jsxs","className","height","allowfullscreen","frameborder","src","concat","href","alt","target","rel","map","paragraph","_Fragment","ProjectsGrid","projects","searchProject","searchProjectsByTitle","selectProject","selectProjectsByCategory","useContext","ProjectsContext","project","ProjectSingle","img","id","projectId","projectsData","chatAppImg","sanskritiImg","charmNextJSImg","templateBarberImg","charmWebsiteImg","salesLedgerImg","cinequeueImg","rcmndrImg","gpImg","hailImg","todosImg","postgramImg","createContext","ProjectsProvider","props","setProjects","useState","setSearchProject","setSelectProject","filter","item","toLowerCase","includes","charAt","toUpperCase","slice","Provider","value"],"sourceRoot":""}